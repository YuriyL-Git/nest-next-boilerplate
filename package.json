{
  "name": "@app/source",
  "version": "0.0.0",
  "license": "MIT",
  "scripts": {
    "---dev start-----": "----------------------------------------------------------",
    "start": "pnpm stop-ports; npx concurrently --kill-others-on-fail \"pnpm run start:*\" ",
    "start:api": "wait-on tcp:5433 && nx serve api",
    "start:web": "wait-on tcp:3333 && nx serve web",
    "start:web-browser": "wait-on tcp:4200 && open http://localhost:4200",
    "start:graphql-playground": "wait-on tcp:3333 && open http://localhost:3333/graphiql",
    "start:db": "pnpm db:dockers:dev &&  npx env-cmd -f .local.env npx prisma db push --accept-data-loss && npx env-cmd -f .local.env npx prisma generate",
    "start:prisma-studio": "wait-on tcp:3333  && npx env-cmd -f .local.env npx prisma studio",
    "start:generate-public": "npx ts-node --project tools/tsconfig.tools.json tools/generate-public-files-list/generate-public-list.ts",
    "start:generate-routes": "npx ts-node --project tools/tsconfig.tools.json tools/route-generator/route-generator.ts",
    "start:generate-prisma": "npx ts-node --project tools/tsconfig.tools.json tools/prisma-generator/prisma-generator.ts",
    "start:verify-env": "npx env-cmd -f .local.env ts-node --project tools/tsconfig.tools.json tools/validate-env/validate-env.ts",
    "start:watch-env": "npx env-cmd -f .local.env ts-node --project tools/tsconfig.tools.json tools/env-crypt/watch-env.ts",
    "start:gql:watch": "graphql-codegen --watch --config tools/graphql-codegen/codegen.ts",
    "---helpers-----": "----------------------------------------------------------",
    "stop-ports": "npx kill-port 5433 3333 4200",
    "migrate-dev": "npx env-cmd -f .local.env npx prisma migrate dev",
    "migrate-create": "npx env-cmd -f .local.env npx prisma migrate dev --create-only && npx ts-node --project tools/tsconfig.tools.json tools/prisma-generator/prisma-migrate.ts",
    "db:dockers:dev": "npx env-cmd -f .local.env docker compose -f tools/db-environment/dev.docker-compose.yml up -d --no-recreate --remove-orphans",
    "lint-fix": "nx lint --fix --all",
    "verify": "nx run api:lint && nx run web:lint && nx format:write && nx format:check && nx affected --base origin/master  --target=lint --fix --parallel=3",
    "test": "nx test",
    "prepare": "husky install",
    "ts-api": "cd apps/api && tsc --p tsconfig.app.json --noEmit --incremental --preserveWatchOutput --pretty",
    "ts-web": "cd apps/web && tsc --noEmit --incremental --preserveWatchOutput --pretty",
    "ts-libs": "cd libs && tsc --noEmit --incremental --preserveWatchOutput --pretty",
    "ts": "pnpm ts-api && pnpm ts-web && pnpm ts-libs",
    "decrypt-env": "npx env-cmd -f .local.env ts-node --project tools/tsconfig.tools.json tools/env-crypt/decrypt-env.ts local",
    "upgrade-packages": "nx migrate latest && pnpm install && pnpm i next@latest",
    "preinstall": "npx only-allow pnpm",
    "pre-commit": "x-terminal-emulator -e \"pnpm migrate-create\" && git add libs/api/data-access-db/src/lib/migrations && pnpm ts && pnpm verify",
    "-----ci-cd------": "----------------------------------------------------------",
    "db:dockers": "npx env-cmd -f .env docker-compose -f tools/db-environment/docker-compose.yml up -d --no-recreate --remove-orphans",
    "build:api": "wait-on tcp:0.0.0.0:5433 && pnpm cd:db-deploy && pnpm nx build api --prod",
    "build:web": "wait-on tcp:0.0.0.0:3333 && pnpm nx build web --prod",
    "serve:api": "pnpm nx serve api --prod",
    "serve:web": "cd dist/apps/web && npx env-cmd -f ./../../../.env pnpm next start -p 8080",
    "cd:validate-env": "npx env-cmd -f .env npx ts-node --project tools/tsconfig.tools.json tools/validate-env/validate-env.ts",
    "cd:db-deploy": "npx prisma migrate deploy && npx prisma generate",
    "cd:db-seed": "npx ts-node --project tools/tsconfig.tools.json tools/seed-db/seed-db.ts",
    "web-out": "sudo journalctl -f -u web",
    "api-out": "sudo journalctl -f -u api",
    "update-secrets": "npx ts-node --project tools/tsconfig.tools.json tools/env-update/secrets-gen.ts",
    "services-update": "ts-node --project tools/tsconfig.tools.json tools/services/services-update.ts"
  },
  "private": true,
  "dependencies": {
    "@emotion/react": "^11.11.0",
    "@emotion/styled": "^11.11.0",
    "@fastify/cookie": "6",
    "@fastify/helmet": "^10.1.1",
    "@formatjs/intl-localematcher": "^0.2.32",
    "@mercuriusjs/gateway": "^1.2.0",
    "@mui/material": "^5.13.2",
    "@mui/styles": "^5.13.2",
    "@nestjs/common": "^9.3.8",
    "@nestjs/core": "^9.3.8",
    "@nestjs/graphql": "^11.0.6",
    "@nestjs/jwt": "^10.0.3",
    "@nestjs/mercurius": "^11.0.6",
    "@nestjs/passport": "^9.0.3",
    "@nestjs/platform-fastify": "^9.4.2",
    "@nx/next": "16.3.2",
    "@prisma/client": "^4.15.0",
    "@react-oauth/google": "^0.11.0",
    "@reduxjs/toolkit": "^1.9.5",
    "@swc/helpers": "~0.5.0",
    "axios": "^1.0.0",
    "bcrypt": "^5.1.0",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.0",
    "cookie-signature": "^1.2.1",
    "dotenv": "^16.1.3",
    "fastify": "^4.17.0",
    "fetch-cookie": "^2.1.0",
    "formik": "^2.4.1",
    "google-auth-library": "^8.8.0",
    "graphql": "^16.6.0",
    "graphql-request": "^6.1.0",
    "i": "^0.3.7",
    "jose": "^4.14.4",
    "jsonwebtoken": "^9.0.0",
    "mercurius": "^12.2.0",
    "next": "13.4.6",
    "npm": "^9.7.1",
    "passport-custom": "^1.1.1",
    "passport-jwt": "^4.0.1",
    "passport-local": "^1.0.0",
    "react": "18.2.0",
    "react-cookie": "^4.1.1",
    "react-dom": "18.2.0",
    "react-redux": "^8.0.7",
    "reflect-metadata": "^0.1.13",
    "rxjs": "^7.8.0",
    "tslib": "^2.3.0"
  },
  "devDependencies": {
    "@graphql-codegen/cli": "4.0.1",
    "@graphql-codegen/client-preset": "4.0.0",
    "@graphql-codegen/graphql-modules-preset": "^4.0.0",
    "@graphql-codegen/near-operation-file-preset": "^2.5.0",
    "@graphql-codegen/typed-document-node": "^5.0.0",
    "@graphql-codegen/typescript": "^4.0.0",
    "@graphql-codegen/typescript-graphql-request": "^5.0.0",
    "@graphql-codegen/typescript-operations": "^4.0.0",
    "@nestjs/schematics": "^9.1.0",
    "@nestjs/testing": "^9.1.1",
    "@nrwl/cli": "^15.9.3",
    "@nrwl/next": "16.3.2",
    "@nx/cypress": "16.3.2",
    "@nx/eslint-plugin": "16.3.2",
    "@nx/jest": "16.3.2",
    "@nx/js": "16.3.2",
    "@nx/linter": "16.3.2",
    "@nx/nest": "16.3.2",
    "@nx/node": "16.3.2",
    "@nx/react": "16.3.2",
    "@nx/webpack": "16.3.2",
    "@nx/workspace": "16.3.2",
    "@swc/cli": "~0.1.62",
    "@swc/core": "~1.3.51",
    "@swc/jest": "0.2.20",
    "@testing-library/react": "14.0.0",
    "@types/bcrypt": "^5.0.0",
    "@types/cookie-signature": "^1.1.0",
    "@types/jest": "^29.4.0",
    "@types/jsonwebtoken": "^9.0.2",
    "@types/negotiator": "^0.6.1",
    "@types/node": "18.14.2",
    "@types/passport-local": "^1.0.35",
    "@types/react": "18.0.28",
    "@types/react-dom": "18.0.11",
    "@typescript-eslint/eslint-plugin": "^5.59.7",
    "@typescript-eslint/parser": "^5.59.7",
    "autoprefixer": "^10.4.14",
    "babel-jest": "^29.4.1",
    "chokidar": "^3.5.3",
    "cypress": "^12.11.0",
    "encoding": "^0.1.13",
    "env-cmd": "^10.1.0",
    "eslint": "^8.41.0",
    "eslint-config-next": "13.4.1",
    "eslint-config-prettier": "8.1.0",
    "eslint-plugin-cypress": "^2.10.3",
    "eslint-plugin-import": "2.27.5",
    "eslint-plugin-jsx-a11y": "6.7.1",
    "eslint-plugin-prettier": "^4.2.1",
    "eslint-plugin-react": "7.32.2",
    "eslint-plugin-react-hooks": "4.6.0",
    "eslint-plugin-unicorn": "^47.0.0",
    "eslint-plugin-unused-imports": "^2.0.0",
    "fast-folder-size": "^2.0.0",
    "glob": "^10.2.7",
    "husky": "^8.0.3",
    "install": "^0.13.0",
    "jest": "^29.4.1",
    "jest-environment-jsdom": "^29.4.1",
    "jest-environment-node": "^29.4.1",
    "nx": "16.3.2",
    "postcss": "^8.4.24",
    "prettier": "^2.8.8",
    "prisma": "^4.15.0",
    "prisma-nestjs-graphql": "^18.0.2",
    "ts-jest": "^29.1.0",
    "ts-node": "10.9.1",
    "typescript": "~5.0.2",
    "wait-on": "^7.0.1",
    "webpack": "^5.85.0"
  },
  "prisma": {
    "schema": "libs/api/data-access-db/src/lib/schema.prisma"
  },
  "husky": {
    "hooks": {
      "pre-commit": "pnpm pre-commit"
    }
  }
}
