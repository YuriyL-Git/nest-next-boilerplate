name: 'Build'
description: 'Build branch action'
inputs:
  subdomain-name:
    required: false
    description: 'Subdomain name for build'
  build-branch-name:
    required: true
    description: 'Branch name to push build files to'
  env-file:
    required: true
    description: 'Env file'
  gcp-credentials:
    required: true
    description: 'Google service account json credentials file. Before service account should be set-up and added to vm instance'
  gcp-ssh-private-key:
    required: true
    description: 'Google virtual machine ssh private key - https://cloud.google.com/compute/docs/connect/create-ssh-keys -> create metadata key and set private key here'
  vm-user-name:
    required: true
    description: 'Virtual machine user name'
  instance_name:
    required: true
    description: 'Virtual machine instance name'
  zone:
    required: true
    description: 'Virtual machine zone'
  https-certificate:
    required: true
    description: 'Https certificate file content'
  https-key:
    required: true
    description: 'Https key file content'
runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v3

    - id: 'auth'
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: '${{ inputs.gcp-credentials }}'
    - id: 'compute-ssh'
      uses: 'google-github-actions/ssh-compute@v0'
      with:
        instance_name: '${{ inputs.instance_name }}'
        zone: '${{ inputs.zone }}'
        ssh_private_key: '${{ inputs.gcp-ssh-private-key }}'
        command: cd /home/${{ inputs.vm-user-name }}/${{ github.event.repository.name }} &&
                    sudo git config --global --add safe.directory /home/${{ inputs.vm-user-name }}/${{ github.event.repository.name }} &&
                    sudo git fetch --all &&
                    sudo git checkout "${{ inputs.build-branch-name }}" &&
                    sudo git pull &&
                    sudo echo "${{ inputs.env-file }}" | base64 --decode | sudo tee .env &&
                    sudo git diff --name-only HEAD HEAD~1 | grep package.json && sudo npm ci --cache cachedir  --prefer-offline --verbose;
                    sudo rm -rf dist &&
                    sudo npm run db:dockers &&
                    sudo npm run "build:api" &&
                    sudo npm run "serve:api" &
                    sudo npm run "build:web" &&
                    sudo npm run "serve:web";









